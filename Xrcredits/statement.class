<?php
namespace rCredits;
use rCredits as r;
use rCredits\Util as u;

/**
 * @file
 * rCredits pdf class
 * Extends the TCPDF class -- especially for custom headers and footer.
 */

require_once DRUPAL_ROOT . '/vendor/tcpdf/config/tcpdf_config.php'; // lang/eng.php';
require_once DRUPAL_ROOT . '/vendor/tcpdf/tcpdf.php';

class Statement extends \TCPDF {
  public $regionName; // name of region
  public $regionInfo; // addr, phone, email of region
  public $qid; // rCredits account in header
  public $period; // statement period
  
  /**
   * Create a pdf object for the given rCredits account.
   * @param acct $a: the rCredits account object
   * @param int $period: period date (for account statements) (defaults to current period)
   */
	public function __construct($a = NULL, $period) {
//    parent::__construct('P', 'in', 'LETTER');
    parent::__construct('P', 'mm', 'LETTER');
    u\setDft($a, r\acct());
    $ctty = r\acct($a->community);
    list ($this->regionName, $phone) = array($ctty->fullName, u\fmtPhone($ctty->phone));
    $this->regionInfo = "$ctty->postalAddr<br>$phone &#8226; $ctty->email";
    $this->qid = $a->mainQid;
    $this->period = $period;
  }

  /**
   * Output a cell
   * Overrides parent just for testing.
   */
  public function Cell($w, $h=0, $txt='', $border=0, $ln=0, $align='', $fill=false, $link='', $stretch=0, $ignore_min_height=false, $calign='T', $valign='M') {
    global $formOut; if (u\test()) $formOut['text'] .= "$txt \n";
    
    parent::Cell($w, $h, $txt, $border, $ln, $align, $fill, $link, $stretch, $ignore_min_height, $calign, $valign);
  }    
  
  public function Header() {
    $m = 5; // basic margin
    $this->Image(__DIR__ . '/images/' . PROJECT_LOGO, $m + 2, $m, 14, '', 'PNG', '', 'T', false, 300, '', false, false, 0, false, false, false);
    $this->SetFont('helvetica', '', 9);
    $this->writeHTMLCell(50, 0, $m + 20, $m + 2, '<b style="color:#004d00; font-stretch:expanded;">' . PROJECT . '&trade;</b><br>' . t('the payment card<br>for community power'));
    $this->writeHTMLCell(80, 0, $m + 65, $m + 2, "<b>$this->regionName</b><br>$this->regionInfo", 0, 0, FALSE, TRUE, 'C');
    list ($page, $pages) = array($this->getAliasNumPage(), $this->getAliasNbPages());
    $this->writeHTMLCell(50, 0, $m + 168, $m + 2, "<b>Account: $this->qid</b><br>$this->period<br>Page $page of $pages");
    
    $this->Line($m, $m + 17, $m + 200, $m + 17);
  }

  public function Footer() {
    $h = $this->getPageHeight();
    $this->Line(5, $h - 13, 5 + 200, $h - 13);
    $this->SetFont('helvetica', '', 9);
    $this->SetY(-13);
		$this->Cell(0, 10, t('To manage your account, sign in at %CG_DOMAIN'), 0, '', 'C');
  }

  /**
   * Output a solid-background section header bar.
   * @param string $subtitle: section header text
   */
  function barHead($subtitle) {
    $size = $this->getFontSizePt();
    $this->SetTextColor(255,255,255);
    $this->setFontSize(1.2 * $size);
    $this->SetFillColor(0,0,128);
    $this->Cell(0, 0, $subtitle, '', 1, 'C', TRUE);
    $this->setFontSize(.5 * $size);
    $this->newLine();
    $this->setFontSize($size);
    $this->SetTextColor();
  }

  /**
   * Output column headers.
   */
  function colHeads($fields) {
    $size = $this->getFontSizePt();
    $this->SetTextColor(0,0,128);
    foreach ($fields as $one) {
      list ($head, $fieldName, $width, $align) = explode('/', $one);
      $this->Cell($width, 0, $head, '', 0, $align);
    }
    $this->newLine();
    $this->SetTextColor();
  }

  function newLine() {$this->Cell(0, 0, '', '', 1);}

  /**
   * Close and output PDF document  
   * @param string $dest: I=inline (to browser) D=download F=to file,...
   */
  public function finish($filename = '', $dest = 'I') { // must be same args and defaults as in TCPDF
//    if (isDEV) parent::Output(TEST_PDF_FLNM, 'F'); // for testing
    if (u\test()) $this->Close(); else parent::Output($filename, $dest);
  }
}
